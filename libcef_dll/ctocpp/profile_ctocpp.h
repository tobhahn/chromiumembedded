// Copyright (c) 2010 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// -------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool and should not edited
// by hand. See the translator.README.txt file in the tools directory for
// more information.
//

#ifndef _PROFILE_CTOCPP_H
#define _PROFILE_CTOCPP_H

#ifndef USING_CEF2_SHARED
#pragma message("Warning: "__FILE__" may be accessed wrapper-side only")
#else // USING_CEF2_SHARED

#include "include/cef2.h"
#include "include/cef2_capi.h"
#include "libcef_dll/ctocpp/ctocpp.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class CefProfileCToCpp
    : public CefCToCpp<CefProfileCToCpp, CefProfile, cef_profile_t>
{
public:
  CefProfileCToCpp(cef_profile_t* str)
      : CefCToCpp<CefProfileCToCpp, CefProfile, cef_profile_t>(str) {}
  virtual ~CefProfileCToCpp() {}

  // CefProfile methods
  virtual void AddBrowserListener(const std::wstring& id_string,
      CefRefPtr<CefBrowserListener> listener);
  virtual void RemoveBrowserListener(const std::wstring& id_string);
  virtual void AddTabListener(const std::wstring& id_string,
      CefRefPtr<CefTabListener> listener);
  virtual void RemoveTabListener(const std::wstring& id_string);
  virtual void Destroy();
  virtual CefRefPtr<CefBrowser> CreateBrowser(const std::wstring& id_string,
      CefWindowHandle parent, int xpos, int ypos, int width, int height,
      const std::wstring& command_line);
};

#endif // USING_CEF_SHARED
#endif // _PROFILE_CTOCPP_H

