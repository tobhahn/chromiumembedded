// Copyright (c) 2010 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// -------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool and should not edited
// by hand. See the translator.README.txt file in the tools directory for
// more information.
//

#ifndef _TAB_CTOCPP_H
#define _TAB_CTOCPP_H

#ifndef USING_CEF2_SHARED
#pragma message("Warning: "__FILE__" may be accessed wrapper-side only")
#else // USING_CEF2_SHARED

#include "include/cef2.h"
#include "include/cef2_capi.h"
#include "libcef_dll/ctocpp/ctocpp.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class CefTabCToCpp
    : public CefCToCpp<CefTabCToCpp, CefTab, cef_tab_t>
{
public:
  CefTabCToCpp(cef_tab_t* str)
      : CefCToCpp<CefTabCToCpp, CefTab, cef_tab_t>(str) {}
  virtual ~CefTabCToCpp() {}

  // CefTab methods
  virtual CefRefPtr<CefBrowser> GetBrowser();
  virtual void Destroy();
  virtual int GetIndex();
  virtual bool IsSelected();
  virtual void Select();
  virtual bool CanGoBack();
  virtual void GoBack();
  virtual bool CanGoForward();
  virtual void GoForward();
  virtual bool IsLoading();
  virtual void Reload();
  virtual void StopLoad();
  virtual std::wstring GetAddress();
  virtual std::wstring GetTitle();
  virtual void Undo();
  virtual void Redo();
  virtual void Cut();
  virtual void Copy();
  virtual void Paste();
  virtual void Delete();
  virtual void SelectAll();
  virtual void Print();
  virtual void ViewSource();
  virtual void LoadAddress(const std::wstring& url,
      const std::wstring& referrer);
  virtual void ExecuteJavaScript(const std::wstring& frame_xpath,
      const std::wstring& jscript);
};

#endif // USING_CEF_SHARED
#endif // _TAB_CTOCPP_H

